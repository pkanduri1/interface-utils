version: '3.8'

services:
  # Interface Utils Application
  interface-utils:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: interface-utils
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=jdbc:postgresql://postgres:5432/interfaceutils
      - DATABASE_USERNAME=interfaceutils
      - DATABASE_PASSWORD=interfaceutils123
      - DATABASE_DRIVER=org.postgresql.Driver
      - SQL_WATCH_FOLDER=/opt/interfaceutils/sql-scripts
      - SQLLOADER_LOG_FOLDER=/opt/interfaceutils/sqlloader-logs
      - LOG_FILE_PATH=/var/log/interface-utils/interface-utils.log
      - LOG_LEVEL_APP=INFO
    volumes:
      - ./data/sql-scripts:/opt/interfaceutils/sql-scripts
      - ./data/sqlloader-logs:/opt/interfaceutils/sqlloader-logs
      - ./logs:/var/log/interface-utils
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - interfaceutils-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: interfaceutils-postgres
    environment:
      - POSTGRES_DB=interfaceutils
      - POSTGRES_USER=interfaceutils
      - POSTGRES_PASSWORD=interfaceutils123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - interfaceutils-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U interfaceutils -d interfaceutils"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: interfaceutils-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - interfaceutils-network
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: interfaceutils-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - interfaceutils-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  interfaceutils-network:
    driver: bridge